{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\project-formCongViec\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport Swal from 'sweetalert2'; //Lấy giá trị trong input\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showTaskFrom = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.closeTaskForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onSubmit = data => {\n      var tasks = this.state.tasks; // clone nó xử lý rồi lại merge vào\n      //kiểm tra thêm hay sửa\n\n      if (data.id) {\n        // tồn tại id => sửa\n        var indexData;\n        tasks.map((item, index) => {\n          if (data != null && tasks.id == data.id) {\n            indexData = index;\n          }\n        });\n        tasks[indexData] = data;\n        console.log(tasks[data.id - 1]);\n        this.setState({\n          tasks: tasks\n        });\n      } //ngược lại là thêm\n      else {\n          var tasks = this.state.tasks;\n\n          if (data.status == \"true\") {\n            // status kiểu string nên đổi lại\n            data.status = true;\n          } else {\n            data.status = false;\n          }\n\n          var id;\n\n          if (tasks.length > 0) {\n            id = tasks[tasks.length - 1].id + 1;\n          } else {\n            id = 1;\n          }\n\n          tasks.push(data);\n          tasks[tasks.length - 1].id = id;\n          this.setState({\n            tasks: tasks\n          });\n          Swal.fire({\n            type: \"success\",\n            title: \"Success\",\n            text: \"Success Adding\",\n            showCloseButton: true\n          }); // lưu lại csdl trong localStorage giống cookie\n\n          localStorage.setItem(\"tasks\", JSON.stringify(tasks)); // có thể lưu thẳng tasks như kiểu object luôn\n          // nhưng khuyên là đổi kiểu json string ra rồi muốn lấy thì parse lại\n        }\n    };\n\n    this.onUpdateStatus = id => {\n      // task item truyền id về task list , từ tasklist truyền về APP\n      var tasks = this.state.tasks;\n      tasks.map((task, index) => {\n        // trường hợp id khó còn nếu id là số thì truyền thẳng task[id-1] là ra index\n        if (task.id == id) {\n          tasks[index].status = !tasks[index].status;\n          this.setState({\n            tasks: tasks\n          });\n          localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        }\n      });\n    };\n\n    this.onDelete = data => {\n      var tasks = this.state.tasks;\n      tasks.map((item, index) => {\n        if (data != null && item.id === data) {\n          try {\n            tasks.splice(index, 1);\n            Swal.fire({\n              type: \"success\",\n              title: \"Success\",\n              text: \"Success Deleting\",\n              showCloseButton: true\n            });\n            this.setState({\n              tasks: tasks\n            });\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n          } catch (error) {\n            Swal.fire({\n              type: \"error\",\n              title: \"Oops\",\n              text: \"Something wrong\",\n              showCloseButton: true\n            });\n          }\n        }\n      });\n    };\n\n    this.onEdit = data => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n      var taskEdit;\n      var tasks = this.state.tasks;\n      tasks.map((item, index) => {\n        if (data != null && item.id == data) {\n          taskEdit = index;\n        }\n      });\n      this.setState({\n        stateEditing: tasks[taskEdit]\n      });\n      console.log(tasks[13]);\n    };\n\n    this.state = {\n      tasks: [{\n        id: 1,\n        name: \"Học Lập Trình\",\n        status: true\n      }, {\n        id: 2,\n        name: \"Học Lập Trình\",\n        status: true\n      }, {\n        id: 3,\n        name: \"Học Lập Trình\",\n        status: false\n      }],\n      // stats mặc định là rỗng => dù set state như thế nào thì reload hay f5 trang đều trở về mặc định\n      //=> ở đây sử dụng localStorage lưu lại cái dữ liệu và set luôn cho stats khi gọi trang hay reload lại\n      isDisplayForm: false,\n      stateEditing: null\n    };\n  } //lấy tasks lưu vào store parse ra gán vào state.tasks mặc định\n\n\n  componentWillMount() {\n    // chạy trước khi component bất kì dc render trên client hay cả server(chạy trc trang khi load)\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  } //đóng mở task from\n\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm; // thay vì var tasks= this.state.tasks\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      closeTaskForm: this.closeTaskForm,\n      onSubmit: this.onSubmit,\n      task: this.state.stateEditing // truyền dữ liệu cái cần edit vào        \n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }) : \"\";\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-12 col-sm-12 col-md-8 col-lg-8 \" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      onClick: this.showTaskFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"glyphicon glyphicon-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), \" Th\\xEAm C\\xF4ng Vi\\u1EC7c\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onEdit: this.onEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\ReactJS\\project-formCongViec\\src\\App.js"],"names":["React","Component","TaskForm","Control","TaskList","Swal","App","constructor","props","showTaskFrom","setState","isDisplayForm","state","closeTaskForm","onSubmit","data","tasks","id","indexData","map","item","index","console","log","status","length","push","fire","type","title","text","showCloseButton","localStorage","setItem","JSON","stringify","onUpdateStatus","task","onDelete","splice","error","onEdit","taskEdit","stateEditing","name","componentWillMount","getItem","parse","render","elmTaskForm","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAIA;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AACzBM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAuClBC,YAvCkB,GAuCL,MAAI;AACf,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAC,CAAC,KAAKC,KAAL,CAAWD;AADd,OAAd;AAID,KA5CiB;;AAAA,SA6ClBE,aA7CkB,GA6CJ,MAAI;AAChB,WAAKH,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAC;AADF,OAAd;AAGD,KAjDiB;;AAAA,SAoDlBG,QApDkB,GAoDRC,IAAD,IAAQ;AAAA,UACVC,KADU,GACD,KAAKJ,KADJ,CACVI,KADU,EACU;AACzB;;AACA,UAAGD,IAAI,CAACE,EAAR,EAAW;AAAC;AACR,YAAIC,SAAJ;AACAF,QAAAA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtB,cAAGN,IAAI,IAAE,IAAN,IAAcC,KAAK,CAACC,EAAN,IAAUF,IAAI,CAACE,EAAhC,EAAmC;AACjCC,YAAAA,SAAS,GAAEG,KAAX;AACD;AACF,SAJD;AAKAL,QAAAA,KAAK,CAACE,SAAD,CAAL,GAAiBH,IAAjB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACD,IAAI,CAACE,EAAL,GAAQ,CAAT,CAAjB;AACA,aAAKP,QAAL,CAAc;AACZM,UAAAA,KAAK,EAACA;AADM,SAAd;AAGH,OAZD,CAaA;AAbA,WAeA;AAAA,cACOA,KADP,GACgB,KAAKJ,KADrB,CACOI,KADP;;AAEE,cAAGD,IAAI,CAACS,MAAL,IAAa,MAAhB,EAAuB;AAAC;AACtBT,YAAAA,IAAI,CAACS,MAAL,GAAY,IAAZ;AACD,WAFD,MAGI;AACFT,YAAAA,IAAI,CAACS,MAAL,GAAY,KAAZ;AACD;;AACD,cAAIP,EAAJ;;AACA,cAAGD,KAAK,CAACS,MAAN,GAAa,CAAhB,EAAkB;AAChBR,YAAAA,EAAE,GAAGD,KAAK,CAACA,KAAK,CAACS,MAAN,GAAa,CAAd,CAAL,CAAsBR,EAAtB,GAAyB,CAA9B;AACD,WAFD,MAGI;AACFA,YAAAA,EAAE,GAAC,CAAH;AACD;;AACDD,UAAAA,KAAK,CAACU,IAAN,CAAWX,IAAX;AACAC,UAAAA,KAAK,CAACA,KAAK,CAACS,MAAN,GAAa,CAAd,CAAL,CAAsBR,EAAtB,GAAyBA,EAAzB;AACA,eAAKP,QAAL,CAAc;AACZM,YAAAA,KAAK,EAACA;AADM,WAAd;AAGAX,UAAAA,IAAI,CAACsB,IAAL,CAAU;AACRC,YAAAA,IAAI,EAAC,SADG;AAERC,YAAAA,KAAK,EAAC,SAFE;AAGRC,YAAAA,IAAI,EAAC,gBAHG;AAIRC,YAAAA,eAAe,EAAC;AAJR,WAAV,EApBF,CA0BE;;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAenB,KAAf,CAA7B,EA3BF,CA2BqD;AACnD;AACD;AACF,KApGiB;;AAAA,SAuGlBoB,cAvGkB,GAuGFnB,EAAD,IAAM;AAAC;AAAD,UACdD,KADc,GACN,KAAKJ,KADC,CACdI,KADc;AAEnBA,MAAAA,KAAK,CAACG,GAAN,CAAU,CAACkB,IAAD,EAAMhB,KAAN,KAAc;AAAC;AACvB,YAAGgB,IAAI,CAACpB,EAAL,IAASA,EAAZ,EAAe;AACbD,UAAAA,KAAK,CAACK,KAAD,CAAL,CAAaG,MAAb,GAAoB,CAACR,KAAK,CAACK,KAAD,CAAL,CAAaG,MAAlC;AACA,eAAKd,QAAL,CAAc;AACZM,YAAAA,KAAK,EAACA;AADM,WAAd;AAGAgB,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAenB,KAAf,CAA7B;AACD;AACF,OARD;AASD,KAlHiB;;AAAA,SAoHlBsB,QApHkB,GAoHRvB,IAAD,IAAQ;AAAA,UACVC,KADU,GACH,KAAKJ,KADF,CACVI,KADU;AAEfA,MAAAA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACvB,YAAGN,IAAI,IAAE,IAAN,IAAcK,IAAI,CAACH,EAAL,KAAUF,IAA3B,EAAgC;AAC9B,cAAI;AACCC,YAAAA,KAAK,CAACuB,MAAN,CAAalB,KAAb,EAAmB,CAAnB;AACAhB,YAAAA,IAAI,CAACsB,IAAL,CAAU;AACRC,cAAAA,IAAI,EAAC,SADG;AAERC,cAAAA,KAAK,EAAC,SAFE;AAGRC,cAAAA,IAAI,EAAC,kBAHG;AAIRC,cAAAA,eAAe,EAAC;AAJR,aAAV;AAMA,iBAAKrB,QAAL,CAAc;AACdM,cAAAA,KAAK,EAACA;AADQ,aAAd;AAGFgB,YAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAenB,KAAf,CAA7B;AACF,WAZD,CAaA,OAAOwB,KAAP,EAAc;AACZnC,YAAAA,IAAI,CAACsB,IAAL,CAAU;AACGC,cAAAA,IAAI,EAAC,OADR;AAEGC,cAAAA,KAAK,EAAC,MAFT;AAGGC,cAAAA,IAAI,EAAC,iBAHR;AAIGC,cAAAA,eAAe,EAAC;AAJnB,aAAV;AAMD;AACF;AACD,OAxBD;AAyBD,KA/IiB;;AAAA,SAgJlBU,MAhJkB,GAgJV1B,IAAD,IAAQ;AAEb,WAAKL,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAC,CAAC,KAAKC,KAAL,CAAWD;AADd,OAAd;AAGA,UAAI+B,QAAJ;AALa,UAMR1B,KANQ,GAMA,KAAKJ,KANL,CAMRI,KANQ;AAObA,MAAAA,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtB,YAAGN,IAAI,IAAE,IAAN,IAAcK,IAAI,CAACH,EAAL,IAASF,IAA1B,EAA+B;AAC7B2B,UAAAA,QAAQ,GAACrB,KAAT;AACD;AACF,OAJD;AAKA,WAAKX,QAAL,CAAc;AACZiC,QAAAA,YAAY,EAAC3B,KAAK,CAAC0B,QAAD;AADN,OAAd;AAGApB,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAAC,EAAD,CAAjB;AACD,KAhKiB;;AAEhB,SAAKJ,KAAL,GAAW;AACTI,MAAAA,KAAK,EAAC,CACJ;AACEC,QAAAA,EAAE,EAAC,CADL;AAEE2B,QAAAA,IAAI,EAAC,eAFP;AAGEpB,QAAAA,MAAM,EAAC;AAHT,OADI,EAMJ;AACEP,QAAAA,EAAE,EAAC,CADL;AAEE2B,QAAAA,IAAI,EAAC,eAFP;AAGEpB,QAAAA,MAAM,EAAC;AAHT,OANI,EAWJ;AACEP,QAAAA,EAAE,EAAC,CADL;AAEE2B,QAAAA,IAAI,EAAC,eAFP;AAGEpB,QAAAA,MAAM,EAAC;AAHT,OAXI,CADG;AAiBN;AACH;AACAb,MAAAA,aAAa,EAAC,KAnBL;AAoBTgC,MAAAA,YAAY,EAAC;AApBJ,KAAX;AAuBD,GA1BwB,CA4B1B;;;AACCE,EAAAA,kBAAkB,GAAE;AAAC;AACnB,QAAGb,YAAY,IAAGA,YAAY,CAACc,OAAb,CAAqB,OAArB,CAAlB,EAAiD;AAC/C,UAAI9B,KAAK,GAAEkB,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACc,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,WAAKpC,QAAL,CAAc;AACZM,QAAAA,KAAK,EAACA;AADM,OAAd;AAGD;AAEF,GArCwB,CAuCzB;;;AA6HAgC,EAAAA,MAAM,GAAE;AAAA,sBACwB,KAAKpC,KAD7B;AAAA,QACDI,KADC,eACDA,KADC;AAAA,QACOL,aADP,eACOA,aADP,EACmC;;AACzC,QAAIsC,WAAW,GACftC,aAAa,GAAC,oBAAC,QAAD;AACI,MAAA,aAAa,EAAE,KAAKE,aADxB;AAEI,MAAA,QAAQ,EAAE,KAAKC,QAFnB;AAGI,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAW+B,YAHrB,CAGkC;AAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,GAIM,EALnB;AAMD,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,EAKC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,WADH,CAFJ,EAQE;AAAK,MAAA,SAAS,EAAGtC,aAAa,KAAG,IAAhB,GAAsB,wCAAtB,GAA+D,yCAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAA+C,MAAA,OAAO,EAAE,KAAKF,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2E;AAAG,MAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3E,+BADF,CADF,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAyD,MAAA,KAAK,EAAE;AAACyC,QAAAA,OAAO,EAAC;AAAT,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAElC,KADX;AAEI,MAAA,cAAc,EAAE,KAAKoB,cAFzB;AAGI,MAAA,QAAQ,EAAE,KAAKE,QAHnB;AAII,MAAA,MAAM,EAAE,KAAKG,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CALF,CARF,CALD,CADF;AAwCA;;AApNwB;;AAuN3B,eAAenC,GAAf","sourcesContent":["import React ,{Component} from 'react';\r\nimport './App.css';\r\nimport TaskForm from './components/TaskForm';\r\nimport Control from './components/Control'\r\nimport TaskList from './components/TaskList';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\n//Lấy giá trị trong input\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      tasks:[\r\n        {\r\n          id:1,\r\n          name:\"Học Lập Trình\",\r\n          status:true\r\n        },\r\n        {\r\n          id:2,\r\n          name:\"Học Lập Trình\",\r\n          status:true\r\n        },\r\n        {\r\n          id:3,\r\n          name:\"Học Lập Trình\",\r\n          status:false\r\n        }\r\n      ] ,// stats mặc định là rỗng => dù set state như thế nào thì reload hay f5 trang đều trở về mặc định\r\n      //=> ở đây sử dụng localStorage lưu lại cái dữ liệu và set luôn cho stats khi gọi trang hay reload lại\r\n      isDisplayForm:false,\r\n      stateEditing:null,\r\n      \r\n    };\r\n  }\r\n\r\n //lấy tasks lưu vào store parse ra gán vào state.tasks mặc định\r\n  componentWillMount(){// chạy trước khi component bất kì dc render trên client hay cả server(chạy trc trang khi load)\r\n    if(localStorage &&localStorage.getItem('tasks') ){\r\n      var tasks= JSON.parse(localStorage.getItem('tasks'));\r\n      this.setState({\r\n        tasks:tasks\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  //đóng mở task from\r\n  showTaskFrom=()=>{\r\n    this.setState({\r\n      isDisplayForm:!this.state.isDisplayForm\r\n    })\r\n\r\n  }\r\n  closeTaskForm=()=>{\r\n    this.setState({\r\n      isDisplayForm:false\r\n    })\r\n  }\r\n\r\n  //Thêm bản ghi\r\n  onSubmit=(data)=>{\r\n    var {tasks} = this.state;// clone nó xử lý rồi lại merge vào\r\n    //kiểm tra thêm hay sửa\r\n    if(data.id){// tồn tại id => sửa\r\n        var indexData\r\n        tasks.map((item,index)=>{\r\n          if(data!=null && tasks.id==data.id){\r\n            indexData= index;\r\n          }\r\n        })\r\n        tasks[indexData]=data;\r\n        console.log(tasks[data.id-1])\r\n        this.setState({\r\n          tasks:tasks\r\n        })\r\n    }\r\n    //ngược lại là thêm\r\n    else\r\n    {\r\n      var {tasks} = this.state;\r\n      if(data.status==\"true\"){// status kiểu string nên đổi lại\r\n        data.status=true\r\n      }\r\n      else{\r\n        data.status=false\r\n      }\r\n      var id;\r\n      if(tasks.length>0){\r\n        id = tasks[tasks.length-1].id+1;\r\n      }\r\n      else{\r\n        id=1\r\n      }\r\n      tasks.push(data);\r\n      tasks[tasks.length-1].id=id;\r\n      this.setState({\r\n        tasks:tasks\r\n      })\r\n      Swal.fire({\r\n        type:\"success\",\r\n        title:\"Success\",\r\n        text:\"Success Adding\",\r\n        showCloseButton:true,\r\n      })\r\n      // lưu lại csdl trong localStorage giống cookie\r\n      localStorage.setItem(\"tasks\",JSON.stringify(tasks))// có thể lưu thẳng tasks như kiểu object luôn\r\n      // nhưng khuyên là đổi kiểu json string ra rồi muốn lấy thì parse lại\r\n    }\r\n  }\r\n\r\n  //update status\r\n  onUpdateStatus=(id)=>{// task item truyền id về task list , từ tasklist truyền về APP\r\n    var {tasks}= this.state;\r\n    tasks.map((task,index)=>{// trường hợp id khó còn nếu id là số thì truyền thẳng task[id-1] là ra index\r\n      if(task.id==id){\r\n        tasks[index].status=!tasks[index].status;\r\n        this.setState({\r\n          tasks:tasks\r\n        })\r\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks))\r\n      }\r\n    })\r\n  }\r\n\r\n  onDelete=(data)=>{\r\n    var {tasks}=this.state;\r\n    tasks.map((item,index)=>{\r\n     if(data!=null && item.id===data){\r\n       try {\r\n            tasks.splice(index,1);\r\n            Swal.fire({\r\n              type:\"success\",\r\n              title:\"Success\",\r\n              text:\"Success Deleting\",\r\n              showCloseButton:true,\r\n            });\r\n            this.setState({\r\n            tasks:tasks\r\n            });\r\n          localStorage.setItem(\"tasks\",JSON.stringify(tasks))\r\n       } \r\n       catch (error) {\r\n         Swal.fire({\r\n                      type:\"error\",\r\n                      title:\"Oops\",\r\n                      text:\"Something wrong\",\r\n                      showCloseButton:true,\r\n                    })\r\n       }\r\n     }\r\n    })\r\n  }\r\n  onEdit=(data)=>{\r\n    \r\n    this.setState({\r\n      isDisplayForm:!this.state.isDisplayForm,\r\n    })\r\n    var taskEdit;\r\n    var {tasks}= this.state;\r\n    tasks.map((item,index)=>{\r\n      if(data!=null && item.id==data){\r\n        taskEdit=index;\r\n      }\r\n    })\r\n    this.setState({\r\n      stateEditing:tasks[taskEdit]\r\n    })\r\n    console.log(tasks[13])\r\n  }\r\n\r\n\r\n  render(){\r\n    var {tasks , isDisplayForm }= this.state;// thay vì var tasks= this.state.tasks\r\n    var elmTaskForm=\r\n    isDisplayForm?<TaskForm \r\n                      closeTaskForm={this.closeTaskForm} \r\n                      onSubmit={this.onSubmit} \r\n                      task={this.state.stateEditing}// truyền dữ liệu cái cần edit vào        \r\n                    />:\"\";\r\n   return( \r\n     <div className=\"container\">\r\n        <div>\r\n            <h1 id=\"title\">Quản Lý Công Việc</h1>\r\n            <hr/>\r\n        </div>\r\n      <div className=\"row\">\r\n        {/* leftside */}\r\n          <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n            {elmTaskForm}\r\n          </div>\r\n        {/* End leftside */}\r\n\r\n        {/* rightside */}\r\n        <div className= {isDisplayForm===true ?\"col-xs-12 col-sm-12 col-md-8 col-lg-8 \":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}> \r\n          <div >\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={this.showTaskFrom}><i className=\"glyphicon glyphicon-plus\"></i> Thêm Công Việc</button>\r\n          </div>\r\n            <br/>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{padding:0}}>\r\n            {/* Search Sort */}\r\n              <Control/>\r\n            {/* End Search Sort */}\r\n            {/* Table */}\r\n              <TaskList \r\n                  tasks={tasks} \r\n                  onUpdateStatus={this.onUpdateStatus} \r\n                  onDelete={this.onDelete}\r\n                  onEdit={this.onEdit}\r\n                />\r\n            {/* End Table */}\r\n \r\n          </div> \r\n       </div>\r\n\r\n      </div>\r\n      \r\n     </div>\r\n   );\r\n      \r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}