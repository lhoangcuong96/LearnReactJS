{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\project-formCongViec\\\\src\\\\components\\\\TaskForm.js\";\nimport React, { Component } from 'react';\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeTaskForm = () => {\n      this.props.closeTaskForm(); // gọi đến cái prop khai báo ở thg cha\n    };\n\n    this.onChange = event => {\n      var target = event.target; //target ở đây là ô input\n\n      var name = target.name;\n      var value = target.value;\n      this.setState({\n        [name]: value // set kiểu dynamic \n        //thay vì txtUsername:value ; hay txtPassWord:value\n        //thì ta lấy [name]:value do name = txtUserName.... tuỳ từng input name sẽ khác nhau\n        //thì cái key dc set sẽ khác nhau\n\n      });\n    };\n\n    this.onClear = () => {\n      this.setState({\n        name: \"\",\n        status: false\n      });\n    };\n\n    this.onSubmit = event => {\n      // this.setState({\n      //     name:\"dauxanh\",\n      //     status:true\n      // });\n      // state là bất đồng bộ \n      // => thay đổi state \n      //nó vẫn sẽ gửi vẫn là state cũ\n      this.props.onSubmit(this.state);\n    };\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false\n    };\n  }\n\n  componentWillMount() {\n    // chỉ được gọi khi thg prop trước khi prop dc gọi lần 1\n    if (this.props.task) {\n      // gọi prop lần 2 thì componentWillMount sẽ không dc gọi thêm nữa\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status\n      });\n    }\n  }\n\n  componentWillReceiveProps() {}\n\n  render() {\n    var id = this.state.id;\n    return React.createElement(\"div\", {\n      class: \"panel panel-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      class: \"panel-title \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, id !== '' ? \"Cập nhật công việc\" : \"Thêm công việc\"), React.createElement(\"span\", {\n      className: \"fa fa-times-circle fa-pull-right\",\n      \"aria-hidden\": \"true\",\n      onClick: this.closeTaskForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"T\\xEAn :\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"name\",\n      id: \"input\",\n      class: \"form-control\",\n      required: \"required\",\n      value: this.state.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng Th\\xE1i\"), React.createElement(\"select\", {\n      name: \"status\",\n      id: \"input\",\n      class: \"form-control\",\n      required: \"required\",\n      onChange: this.onChange,\n      value: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\u1EA8n \"), React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"K\\xEDch Ho\\u1EA1t\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, id != '' ? \"Sửa\" : \"Thêm\"), \"  \\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger\",\n      onClick: this.onClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["D:\\ReactJS\\project-formCongViec\\src\\components\\TaskForm.js"],"names":["React","Component","TaskForm","constructor","props","closeTaskForm","onChange","event","target","name","value","setState","onClear","status","onSubmit","state","id","componentWillMount","task","componentWillReceiveProps","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\n\r\n\r\nclass TaskForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            id:\"\",\r\n            name:\"\",\r\n            status:false,\r\n        };\r\n    };\r\n   \r\n    componentWillMount(){// chỉ được gọi khi thg prop trước khi prop dc gọi lần 1\r\n        if(this.props.task){// gọi prop lần 2 thì componentWillMount sẽ không dc gọi thêm nữa\r\n            this.setState({\r\n                id:this.props.task.id,\r\n                name:this.props.task.name,\r\n                status:this.props.task.status\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        \r\n    }\r\n    closeTaskForm=()=>{\r\n        this.props.closeTaskForm();// gọi đến cái prop khai báo ở thg cha\r\n    }\r\n    onChange=(event)=>{\r\n        var target= event.target;//target ở đây là ô input\r\n        var name = target.name;\r\n        var value= target.value;\r\n        this.setState({\r\n            [name]:value// set kiểu dynamic \r\n                        //thay vì txtUsername:value ; hay txtPassWord:value\r\n                        //thì ta lấy [name]:value do name = txtUserName.... tuỳ từng input name sẽ khác nhau\r\n                        //thì cái key dc set sẽ khác nhau\r\n        })\r\n    }\r\n    onClear=()=>{\r\n        this.setState({\r\n            name:\"\",\r\n            status:false\r\n        })\r\n    }\r\n    onSubmit=(event)=>{\r\n        // this.setState({\r\n        //     name:\"dauxanh\",\r\n        //     status:true\r\n        // });\r\n        // state là bất đồng bộ \r\n        // => thay đổi state \r\n        //nó vẫn sẽ gửi vẫn là state cũ\r\n        this.props.onSubmit(this.state);\r\n    }\r\n    render(){\r\n        var {id} = this.state\r\n        return( \r\n            <div class=\"panel panel-danger\">\r\n                <div class=\"panel-heading\" >\r\n                    <strong class=\"panel-title \" >\r\n                      {id!==''?\"Cập nhật công việc\":\"Thêm công việc\"}\r\n                      {/* Thêm và sửa khác nhau chỗ có id hay k có id */}\r\n                    </strong> \r\n                    <span className=\"fa fa-times-circle fa-pull-right\"  aria-hidden=\"true\" onClick={this.closeTaskForm}></span>\r\n                   \r\n                </div>\r\n                <div class=\"panel-body\">\r\n                    <strong>Tên :</strong>\r\n                    <input \r\n                        type=\"email\" \r\n                        name=\"name\" \r\n                        id=\"input\" \r\n                        class=\"form-control\"  \r\n                        required=\"required\"\r\n                        value={this.state.name}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <br/>\r\n                    <strong>Trạng Thái</strong>\r\n                    <select \r\n                        name=\"status\" \r\n                        id=\"input\" \r\n                        class=\"form-control\" \r\n                        required=\"required\"\r\n                        onChange={this.onChange}\r\n                        value={this.state.status}\r\n                    >\r\n                        <option value={false}>Ẩn </option>\r\n                        <option value={true}>Kích Hoạt</option>\r\n                    </select>\r\n                    <br/>\r\n                    <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-success\"\r\n                        onClick={this.onSubmit}\r\n                    >{id!=''?\"Sửa\":\"Thêm\"}</button>  &nbsp;\r\n                    <button \r\n                        type=\"button\" \r\n                        class=\"btn btn-danger\"\r\n                        onClick={this.onClear}\r\n                    >Reset</button>\r\n                </div>\r\n            </div>    \r\n        )\r\n    }\r\n\r\n}\r\nexport default TaskForm"]},"metadata":{},"sourceType":"module"}