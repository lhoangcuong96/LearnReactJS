{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\project-formCongViec\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport Swal from 'sweetalert2';\nimport { stat } from 'fs'; //Lấy giá trị trong input\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showTask = () => {\n      console.log(this.state);\n    };\n\n    this.showTaskFrom = () => {\n      this.setState({\n        isDisplayForm: true,\n        stateEditing: null //khi bấm sửa xong lại bấm thêm sẽ reset hết để thêm\n\n      });\n    };\n\n    this.closeTaskForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onSubmit = data => {\n      var tasks = this.state.tasks; // clone nó xử lý rồi lại merge vào\n      //kiểm tra thêm hay sửa\n\n      if (data.id) {\n        // tồn tại id => sửa\n        var indexData;\n        tasks.map((task, index) => {\n          if (data != null && task.id == data.id) {\n            indexData = index;\n          }\n        });\n        tasks[indexData] = data;\n      } //ngược lại là thêm\n      else {\n          if (data.status == \"true\") {\n            // status kiểu string nên đổi lại\n            data.status = true;\n          } else {\n            data.status = false;\n          }\n\n          var id;\n\n          if (tasks.length > 0) {\n            id = tasks[tasks.length - 1].id + 1;\n          } else {\n            id = 1;\n          }\n\n          tasks.push(data);\n          tasks[tasks.length - 1].id = id;\n          Swal.fire({\n            type: \"success\",\n            title: \"Success\",\n            text: \"Success Adding\",\n            showCloseButton: true\n          });\n        }\n\n      this.setState({\n        tasks: tasks\n      }); // lưu lại csdl trong localStorage giống cookie\n\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks)); // có thể lưu thẳng tasks như kiểu object luôn\n      // nhưng khuyên là đổi kiểu json string ra rồi muốn lấy thì parse lại\n    };\n\n    this.onUpdateStatus = id => {\n      // task item truyền id về task list , từ tasklist truyền về APP\n      var tasks = this.state.tasks;\n      tasks.map((task, index) => {\n        // trường hợp id khó còn nếu id là số thì truyền thẳng task[id-1] là ra index\n        if (task.id == id) {\n          tasks[index].status = !tasks[index].status;\n          this.setState({\n            tasks: tasks\n          });\n          localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        }\n      });\n    };\n\n    this.onDelete = data => {\n      var tasks = this.state.tasks;\n      tasks.map((item, index) => {\n        if (data != null && item.id === data) {\n          try {\n            tasks.splice(index, 1);\n            Swal.fire({\n              type: \"success\",\n              title: \"Success\",\n              text: \"Success Deleting\",\n              showCloseButton: true\n            });\n            this.setState({\n              tasks: tasks\n            });\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n          } catch (error) {\n            Swal.fire({\n              type: \"error\",\n              title: \"Oops\",\n              text: \"Something wrong\",\n              showCloseButton: true\n            });\n          }\n        }\n      });\n    };\n\n    this.onEdit = data => {\n      this.showTaskFrom();\n      var taskEdit;\n      var tasks = this.state.tasks;\n      tasks.map((item, index) => {\n        if (data != null && item.id == data) {\n          taskEdit = index;\n        }\n      });\n      this.setState({\n        stateEditing: tasks[taskEdit]\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          filterName: filterName.toLowerCase(),\n          filterStatus: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keySearch => {\n      keySearch = keySearch.toLowerCase();\n      this.setState({\n        search: keySearch\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sort: {\n          name: sortBy,\n          value: sortValue\n        }\n      });\n    };\n\n    this.state = {\n      tasks: [{\n        id: 1,\n        name: \"Học Lập Trình\",\n        status: true\n      }, {\n        id: 2,\n        name: \"Học Lập Trình\",\n        status: true\n      }, {\n        id: 3,\n        name: \"Học Lập Trình\",\n        status: false\n      }],\n      // stats mặc định là rỗng => dù set state như thế nào thì reload hay f5 trang đều trở về mặc định\n      //=> ở đây sử dụng localStorage lưu lại cái dữ liệu và set luôn cho stats khi gọi trang hay reload lại\n      isDisplayForm: false,\n      stateEditing: null,\n      filter: {\n        filterName: \"\",\n        filterStatus: -1\n      },\n      search: \"\",\n      sort: {\n        name: \"name\",\n        value: true\n      }\n    };\n  } //lấy tasks lưu vào store parse ra gán vào state.tasks mặc định\n\n\n  componentWillMount() {\n    // chạy trước khi component bất kì dc render trên client hay cả server(chạy trc trang khi load)\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        filter = _this$state.filter,\n        search = _this$state.search,\n        sort = _this$state.sort; // thay vì var tasks= this.state.tasks \n    // filter trước khi đẩy tasks về \n\n    if (filter) {\n      if (filter.filterName) {\n        // mới load trang filer= null => k ra gì cả \n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.filterName) != -1; // !=-1 => tìm thấy\n          // giữ lại\n        });\n      } // filterStatus có giá trị mặc định -1 => k cần kiểm tra giống filterName\n\n\n      if (this.state.filter.filterStatus != -1) //-1 => lấy tất cả => k tính\n        tasks = tasks.filter(task => {\n          return task.status == filter.filterStatus;\n        });\n    }\n\n    ;\n\n    if (search) {\n      // ở đây chỉ có 1 trường có search \n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(search) != -1;\n      });\n    }\n\n    if (sort.name == \"name\") {\n      console.log(sort.name);\n      tasks.sort((a, b) => {// if(a.id > b.id) return \"cmm\";// tăng dần\n        // else if(b.id> a.id) return \"mano\";//giảm dần \n        // else return 0;\n      });\n    } else if (sort.sortBy == \"status\") {\n      tasks = tasks.sort((a, b) => {\n        console.log(b.name);\n        console.log(a.name);\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      closeTaskForm: this.closeTaskForm,\n      onSubmit: this.onSubmit,\n      task: this.state.stateEditing // truyền dữ liệu cái cần edit vào  \n      // nếu bấm thêm sẽ là rỗng      \n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }) : \"\";\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-4 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-12 col-sm-12 col-md-8 col-lg-8 \" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      onClick: this.showTaskFrom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"glyphicon glyphicon-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), \" Th\\xEAm C\\xF4ng Vi\\u1EC7c\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onEdit: this.onEdit,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\ReactJS\\project-formCongViec\\src\\App.js"],"names":["React","Component","TaskForm","Control","TaskList","Swal","stat","App","constructor","props","showTask","console","log","state","showTaskFrom","setState","isDisplayForm","stateEditing","closeTaskForm","onSubmit","data","tasks","id","indexData","map","task","index","status","length","push","fire","type","title","text","showCloseButton","localStorage","setItem","JSON","stringify","onUpdateStatus","onDelete","item","splice","error","onEdit","taskEdit","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSearch","keySearch","search","onSort","sortBy","sortValue","sort","name","value","componentWillMount","getItem","parse","render","indexOf","a","b","elmTaskForm","padding"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\r\nimport './App.css';\r\nimport TaskForm from './components/TaskForm';\r\nimport Control from './components/Control'\r\nimport TaskList from './components/TaskList';\r\nimport Swal from 'sweetalert2';\r\nimport { stat } from 'fs';\r\n\r\n\r\n\r\n//Lấy giá trị trong input\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      tasks:[\r\n        {\r\n          id:1,\r\n          name:\"Học Lập Trình\",\r\n          status:true\r\n        },\r\n        {\r\n          id:2,\r\n          name:\"Học Lập Trình\",\r\n          status:true\r\n        },\r\n        {\r\n          id:3,\r\n          name:\"Học Lập Trình\",\r\n          status:false\r\n        }\r\n      ] ,// stats mặc định là rỗng => dù set state như thế nào thì reload hay f5 trang đều trở về mặc định\r\n      //=> ở đây sử dụng localStorage lưu lại cái dữ liệu và set luôn cho stats khi gọi trang hay reload lại\r\n      isDisplayForm:false,\r\n      stateEditing:null,\r\n      filter:{\r\n        filterName:\"\",\r\n        filterStatus:-1,\r\n      },\r\n      search:\"\",\r\n      sort:{\r\n        name:\"name\",\r\n        value:true,\r\n      }\r\n      \r\n    };\r\n  }\r\n\r\n //lấy tasks lưu vào store parse ra gán vào state.tasks mặc định\r\n  componentWillMount(){// chạy trước khi component bất kì dc render trên client hay cả server(chạy trc trang khi load)\r\n    if(localStorage &&localStorage.getItem('tasks') ){\r\n      var tasks= JSON.parse(localStorage.getItem('tasks'));\r\n      this.setState({\r\n        tasks:tasks\r\n      })\r\n    }\r\n    \r\n  }\r\n  showTask=()=>{\r\n    console.log(this.state)\r\n  }\r\n  //đóng mở task from\r\n  showTaskFrom=()=>{\r\n    this.setState({\r\n      isDisplayForm:true,\r\n      stateEditing:null,//khi bấm sửa xong lại bấm thêm sẽ reset hết để thêm\r\n    })\r\n\r\n  }\r\n  closeTaskForm=()=>{\r\n    this.setState({\r\n      isDisplayForm:false\r\n    })\r\n  }\r\n\r\n  //Thêm bản ghi\r\n  onSubmit=(data)=>{\r\n    var {tasks} = this.state;// clone nó xử lý rồi lại merge vào\r\n    //kiểm tra thêm hay sửa\r\n    if(data.id){// tồn tại id => sửa\r\n        var indexData;\r\n        tasks.map((task,index)=>{\r\n          if(data!=null && task.id==data.id){\r\n            indexData= index;\r\n          }\r\n        });\r\n        tasks[indexData]=data;\r\n    }\r\n    \r\n    //ngược lại là thêm\r\n    else\r\n    {\r\n      if(data.status==\"true\"){// status kiểu string nên đổi lại\r\n        data.status=true\r\n      }\r\n      else{\r\n        data.status=false\r\n      }\r\n      var id;\r\n      if(tasks.length>0){\r\n        id = tasks[tasks.length-1].id+1;\r\n      }\r\n      else{\r\n        id=1\r\n      }\r\n      tasks.push(data);\r\n      tasks[tasks.length-1].id=id;\r\n      Swal.fire({\r\n        type:\"success\",\r\n        title:\"Success\",\r\n        text:\"Success Adding\",\r\n        showCloseButton:true,\r\n      })\r\n    }\r\n    this.setState({\r\n      tasks:tasks\r\n    })\r\n    // lưu lại csdl trong localStorage giống cookie\r\n    localStorage.setItem(\"tasks\",JSON.stringify(tasks))// có thể lưu thẳng tasks như kiểu object luôn\r\n    // nhưng khuyên là đổi kiểu json string ra rồi muốn lấy thì parse lại\r\n  }\r\n\r\n  //update status\r\n  onUpdateStatus=(id)=>{// task item truyền id về task list , từ tasklist truyền về APP\r\n    var {tasks}= this.state;\r\n    tasks.map((task,index)=>{// trường hợp id khó còn nếu id là số thì truyền thẳng task[id-1] là ra index\r\n      if(task.id==id){\r\n        tasks[index].status=!tasks[index].status;\r\n        this.setState({\r\n          tasks:tasks\r\n        })\r\n        localStorage.setItem(\"tasks\",JSON.stringify(tasks))\r\n      }\r\n    })\r\n  }\r\n\r\n  onDelete=(data)=>{\r\n    var {tasks}=this.state;\r\n    tasks.map((item,index)=>{\r\n     if(data!=null && item.id===data){\r\n       try {\r\n            tasks.splice(index,1);\r\n            Swal.fire({\r\n              type:\"success\",\r\n              title:\"Success\",\r\n              text:\"Success Deleting\",\r\n              showCloseButton:true,\r\n            });\r\n            this.setState({\r\n            tasks:tasks\r\n            });\r\n          localStorage.setItem(\"tasks\",JSON.stringify(tasks))\r\n       } \r\n       catch (error) {\r\n         Swal.fire({\r\n                      type:\"error\",\r\n                      title:\"Oops\",\r\n                      text:\"Something wrong\",\r\n                      showCloseButton:true,\r\n                    })\r\n       }\r\n     }\r\n    })\r\n  }\r\n  onEdit=(data)=>{\r\n    \r\n    this.showTaskFrom();\r\n    var taskEdit;\r\n    var {tasks}= this.state;\r\n    tasks.map((item,index)=>{\r\n      if(data!=null && item.id==data){\r\n        taskEdit=index;\r\n      }\r\n    })\r\n    this.setState({\r\n      stateEditing:tasks[taskEdit]\r\n    })\r\n  }\r\n  onFilter=(filterName,filterStatus)=>{\r\n    filterStatus= parseInt(filterStatus,10);\r\n    this.setState({\r\n      filter:{\r\n        filterName:filterName.toLowerCase(),\r\n        filterStatus:filterStatus\r\n      }\r\n    })\r\n  }\r\n  onSearch=(keySearch)=>{\r\n    keySearch=keySearch.toLowerCase();\r\n    this.setState({\r\n      search:keySearch\r\n    })\r\n  }\r\n\r\n  onSort=(sortBy,sortValue)=>{\r\n    this.setState({\r\n      sort:{\r\n        name:sortBy,\r\n        value:sortValue\r\n      }\r\n    })\r\n  }\r\n\r\n  render(){\r\n    var {tasks , isDisplayForm , filter, search, sort}= this.state;// thay vì var tasks= this.state.tasks \r\n    // filter trước khi đẩy tasks về \r\n    if(filter){\r\n      if(filter.filterName){// mới load trang filer= null => k ra gì cả \r\n        tasks=tasks.filter((task)=>{\r\n          return task.name.toLowerCase().indexOf( filter.filterName)!=-1// !=-1 => tìm thấy\r\n                                                                        // giữ lại\r\n        })\r\n      }\r\n      // filterStatus có giá trị mặc định -1 => k cần kiểm tra giống filterName\r\n      if(this.state.filter.filterStatus!=-1)//-1 => lấy tất cả => k tính\r\n      tasks=tasks.filter((task)=>{\r\n        return task.status==filter.filterStatus\r\n      })\r\n    };\r\n    if(search){// ở đây chỉ có 1 trường có search \r\n      tasks=tasks.filter((task)=>{\r\n        return task.name.toLowerCase().indexOf(search)!=-1;\r\n      })\r\n    }\r\n    \r\n    if(sort.name==\"name\"){\r\n      console.log(sort.name)\r\n      tasks.sort((a,b)=>{\r\n        // if(a.id > b.id) return \"cmm\";// tăng dần\r\n        // else if(b.id> a.id) return \"mano\";//giảm dần \r\n        // else return 0;\r\n      });\r\n    }\r\n    else if(sort.sortBy==\"status\"){\r\n      tasks=tasks.sort((a,b)=>{\r\n        console.log(b.name);\r\n        console.log(a.name);\r\n      })\r\n    }\r\n    \r\n    var elmTaskForm=\r\n    isDisplayForm?<TaskForm \r\n                      closeTaskForm={this.closeTaskForm} \r\n                      onSubmit={this.onSubmit} \r\n                      task={this.state.stateEditing}// truyền dữ liệu cái cần edit vào  \r\n                                                    // nếu bấm thêm sẽ là rỗng      \r\n                    />:\"\";\r\n   return( \r\n     <div className=\"container\">\r\n        <div>\r\n            <h1 id=\"title\">Quản Lý Công Việc</h1>\r\n            <hr/>\r\n        </div>\r\n      <div className=\"row\">\r\n        {/* leftside */}\r\n          <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4\">\r\n            {elmTaskForm}\r\n          </div>\r\n        {/* End leftside */}\r\n\r\n        {/* rightside */}\r\n        <div className= {isDisplayForm===true ?\"col-xs-12 col-sm-12 col-md-8 col-lg-8 \":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}> \r\n          <div >\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={this.showTaskFrom}><i className=\"glyphicon glyphicon-plus\"></i> Thêm Công Việc</button>\r\n            {/* <button type=\"button\" className=\"btn btn-info\" onClick={this.showTask}><i className=\"glyphicon glyphicon-plus\"></i> Show Tasks</button> */}\r\n          </div>\r\n            <br/>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{padding:0}}>\r\n            {/* Search Sort */}\r\n              <Control\r\n                onSearch={this.onSearch}\r\n                onSort={this.onSort}\r\n              />\r\n            {/* End Search Sort */}\r\n            {/* Table */}\r\n              <TaskList \r\n                  tasks={tasks} \r\n                  onUpdateStatus={this.onUpdateStatus} \r\n                  onDelete={this.onDelete}\r\n                  onEdit={this.onEdit}\r\n                  onFilter={this.onFilter}\r\n                />\r\n            {/* End Table */}\r\n \r\n          </div> \r\n       </div>\r\n\r\n      </div>\r\n      \r\n     </div>\r\n   );\r\n      \r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}